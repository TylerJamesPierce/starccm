#!/usr/bin/perl
#Routine for running ins2d and creating
#the proper directories.

#gathers input from script file
use File::Copy; #uses the file copy module
use Cwd;
use Shell qw(echo pwd);

$nodes = 1;
$ppn = 1;
$wktime = 2;
$named_user = `whoami`;
chomp($named_user);

@CaG = @ARGV;
foreach $fid (@CaG){
    open(WORKING, "$fid") || die "Couldn't open $CaG! $! \n";

    $alpha_trig = 0;
    $grid_trig = 0;
    
    while(<WORKING>){
        next if $_ =~ /^\s*$/;	#skips blank lines
        if($_ =~ m/^ALPHAS/){
            $alpha_trig = 1;
            $grid_trig = 0;
            next;
        }
    
        if($_ =~ m/^GRIDS/){
            $grid_trig = 1;
            $alpha_trig = 0;
            next;
        }

        if($alpha_trig == 1 && $grid_trig == 0){
            chomp($_);
            push(@alphas, $_); 
        }
        elsif($grid_trig ==1 && $alpha_trig ==0){
            chomp($_);
            push(@grids, $_);
        }
        else{
        }

    }

    close(WORKING);
}

$case_name = substr($grids[0],0,rindex($grids[0],".")) ;
$case_name = substr($case_name,0,rindex($case_name,".")) ;

# Creates the directories for the different alphas and copies the files to 
# those directories. 
$base_dir = getcwd();
for($i = 0; $i < scalar(@alphas); $i++){
    for($j = 0; $j < scalar(@grids); $j++){
        $alpha_trig = 0;
        if ($alphas[$i] < 0){
            $d_alpha = abs($alphas[$i]);
            $d_alpha = "n".$d_alpha;
        }
        else{
            $d_alpha = abs($alphas[$i]);
        }
        $directory[$i] = "a".$d_alpha;
        mkdir $directory[$i];
        copy($grids[$j], $directory[$i]) or die "Copy of $grids[$j] to $directory[$i] failed! $!";
        copy("ins2d.in", $directory[$i]) or die "Copy of ins2d.in to $directory[$i] failed! $!";
        chdir $directory[$i] or die "Failed to change directory to $directory! $!";

        open(OLD, "<ins2d.in") or die "Failed to open ginput.faces in $directory[$i]! $!";
        open(NEW, ">new") or die "Can't open new:$!";
 
             while(<OLD>){
                
                #next if $_ =~ /^\s*$/;	#skips blank lines
                if(/alpha/o){
                    $alpha_trig = 1;
                }
                else{
                }
                if($alpha_trig == 1){
                    @cond_line = split("=",$_);
                    $cond_line[1]=$alphas[$i];
		    $new_l= join("=",@cond_line);
                    printf(NEW "$new_l\n");
		    $alpha_trig = 0;
                }
                else{
                    printf(NEW $_);
                }
 
            }
        
        close(OLD);
        close(NEW);
        rename("new", "ins2d.in") or die "Couldn't rename file! $!";
        chdir $base_dir;

    } #end of $j loop
}   #end of $i loop

#writes qsub master node file#

open(MASTER, ">runins2d_Master.qsub") or die " Couldn't open Master file! $!";
printf(MASTER "#PBS -S /bin/sh\n");
printf(MASTER "#PBS -N ins2d_seq_qsub\n");
printf(MASTER "#PBS -l nodes=1:ppn=1\n");
printf(MASTER "#PBS -l cput=00:06:00\n");
printf(MASTER "#PBS -j oe\n");
printf(MASTER "cd \$PBS_O_WORKDIR\n");
for($i = 0; $i < scalar(@directory); $i++){
    if($i < 1){
        printf(MASTER "cd $directory[$i]\n");
        printf(MASTER "/opt/torque/bin/qsub runins2d_slave.qsub\n");
    }
    else{
        printf(MASTER "cd ../$directory[$i]\n");
        printf(MASTER "/opt/torque/bin/qsub runins2d_slave.qsub\n");
    }
}
printf(MASTER "exit 0\n");
close(MASTER);

#######

#writes qsub slave node file and copies it into the current directories#

$num_changed = chmod 0755, 'runins2d_Master.qsub';

for($i = 0; $i<scalar(@directory); $i++){
    open(SLAVE, ">runins2d_slave.qsub") or die "Couldn't open slave file! $!";
    $slave_case_name = $named_user."_ins2d_".$directory[$i];
    printf(SLAVE "#PBS -N $slave_case_name\n");
    #printf(SLAVE "#PBS -N test_fun3d_qsub\n"); This lie is no longer neaded pc - 1 sept 2005
    printf(SLAVE "#PBS -l nodes=$nodes:ppn=$ppn\n");
    printf(SLAVE "#PBS -l walltime=0$wktime:00:00\n");
    printf(SLAVE "#PBS -l cput=0$wktime:00:00\n");
    printf(SLAVE "#PBS -j oe\n");
    printf(SLAVE "cd \$PBS_O_WORKDIR\n");
    printf(SLAVE "/share/apps/ins2d/ins2d < ins2d.in > ins2d.out\n");
    printf(SLAVE "exit 0\n");
    close(SLAVE);
    $num_changed = chmod 0755, 'runins2d_slave.qsub';
    copy("runins2d_slave.qsub", $directory[$i]) or die "Copy runins2d_slave.qsub of  to $directory[$i] failed! $!";
    }


$run_line = `qsub runins2d_Master.qsub`;


